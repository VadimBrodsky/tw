created: 20141105121222875
modified: 20141105121330020
tags: Rails Rails-Active-Record
title: Options for the has_many declaration
type: text/vnd.tiddlywiki

| !Option        | !Description                   | !Example          |
|`:class_name` |specifies the class name of the association. Used when the class name can't be inferred from the association name. |`has_many :articles, :class_name => 'Post'` |
|`:conditions` |specifies the conditions that the associated objects must meet in order to be included as a `WHERE SQL` fragment. |`has_namy :articles, :conditions => "active=1"` |
|`:foreign_key`|specifies the foreign key used for the association if it doesn't adhere to convention of being a lowercase, singular name of the target class with `_id` appended. |`has_many :articles, :foreign_key => 'post_id'` |
|`:order`      |specifies the order in which the associated objects are returned as an `ORDER BY` SQL fragment. |`has_many :articles, :order => "published_at DESC"` |
|`:dependent`  |specifies that the associated objects should be removed when this object is. |`has_many :articles, :dependent => :destroy` |

* If `:dependent` set to `:destroy` the association objects are deleted using the destroy method.
* If `:dependent`  set to `:delete` the associated objects are deleted without calling its destroy method.
* If `:dependent`  set to `:nullify` the associated objects' foreign key is set to `NULL`.